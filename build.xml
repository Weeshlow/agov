<project name="agov" default="build">

  <!--         -->
  <!-- Imports -->
  <!-- ======= -->

  <import file="vendor/previousnext/phing-phpqatools/build.xml" optional="true" />
  <import file="vendor/previousnext/phing-behat/build.xml"      optional="true" />

  <!--            -->
  <!-- Properties -->
  <!-- ========== -->

  <!-- Application -->
  <property name="app.uri"                value="http://agov.dev"                                     override="true" />
  <property name="app.name"               value="aGov"                                                override="true" />
  <property name="app.dir"                value="${project.basedir}/app"                              override="true" />
  <property name="app.profile.name"       value="agov"                                                override="true" />
  <property name="app.profile.dir"        value="profiles/agov"                                       override="true" />
  <property name="app.profile.options"    value="agov_install_additional_options.install=1"           override="true" />
  <property name="app.files.public"       value="sites/default/files"                                 override="true" />
  <property name="app.files.tmp"          value="sites/default/files/tmp"                             override="true" />
  <property name="app.files.private"      value="sites/default/private"                               override="true" />
  <!-- This should get overidden for secure builds. -->
  <property name="app.password"           value="password"                                            override="true" />
  <!-- Development variables. -->
  <property name="app.dev.modules"        value="config_devel default_content agov_default_content"   override="true" />
  <property name="app.dev.config_modules" value="agov agov_standard_page agov_homepage"               override="true" />

  <!-- Overrides -->
  <property name="php.sniff.dirs"       value="agov/modules/custom agov/themes agov/src" override="true" />
  <exec command="which php" outputProperty="php.bin.php" />

  <!-- Drush -->
  <property name="drush.cmd" value="${project.basedir}/bin/drush" override="true" />

  <!-- Gulp -->
  <property name="gulp.cmd" value="${project.basedir}/node_modules/.bin/gulp" override="true" />

  <!-- Database -->
  <property name="db.querystring" value="mysql://drupal:drupal@localhost/local" override="true" />

  <!-- These allow de`elopers to override configuration on
       a per environment basis -->
  <property file="build.properties" override="true"/>

  <!--              -->
  <!-- Meta targets -->
  <!-- ============ -->

  <target name="build"
          depends="clean, prepare, make, install"
          description="Build (or rebuild) the project.">
  </target>

  <target name="build:dev"
          depends="build, dev:modules"
          description="Build (or rebuild) the project with development dependencies.">
  </target>

  <target name="test"
          depends="phpcs, simpletest"
          description="Run the test suite">
  </target>

  <target name="simpletest:init">
    <exec dir="${app.dir}"
          command="${drush.cmd} en simpletest -y"
          passthru="true"
          checkreturn="true" />
  </target>

  <target name="simpletest"
          depends="simpletest:init">

    <exec dir="${app.dir}"
          command="${php.bin.php} ./core/scripts/run-tests.sh --php ${php.bin.php} --module ${app.profile.name} --url ${app.uri}/"
          passthru="true"
          checkreturn="true" />
  </target>

  <!--                  -->
  <!-- Standard targets -->
  <!-- ================ -->

  <target name="clean" description="Cleans up autogenerated files">
    <!-- Destroy -->
    <if>
      <available file="${app.dir}" type='dir' />
      <then>
        <exec command="chmod -R 2775 ${app.dir}"
              logoutput="true"
              passthru="true"
              checkreturn="true" />
        <exec command="rm -fR ${app.dir}"
              logoutput="true"
              passthru="true"
              checkreturn="true" />
      </then>
    </if>
    <delete >
      <fileset dir="${project.basedir}">
        <include name="modules/contrib/" />
        <include name="themes/contrib/" />
      </fileset>
    </delete>
  </target>

  <target name="prepare"
          description="Setup the project">

    <!-- Create -->
    <exec command="mkdir -p ${app.dir}/${app.files.public} ${app.dir}/${app.files.tmp} ${app.dir}/${app.files.private} ${app.dir}/profiles"
          logoutput="true"
          passthru="true"
          checkreturn="true" />

    <!-- Permissions -->
    <exec command="chmod -R 2775 ${app.dir}/${app.files.public} ${app.dir}/${app.files.tmp} ${app.dir}/${app.files.private}"
          logoutput="true"
          passthru="true"
          checkreturn="true" />

    <!-- Symlink the agov folder into the profiles folder. -->
    <symlink target="${project.basedir}/agov" link="${app.dir}/${app.profile.dir}" />
  </target>

  <target name="make"
          description="Compile aGov from a make file">
    <exec dir="${app.dir}"
          command="${drush.cmd} make -y ${app.profile.dir}/drupal-org.make --no-core --contrib-destination=${app.profile.dir}"
          checkreturn="true"
          logoutput="true"
          passthru="true" />
    <exec dir="${app.dir}"
          command="${drush.cmd} make -y ${app.profile.dir}/drupal-org-core.make --no-cache --prepare-install"
          checkreturn="true"
          logoutput="true"
          passthru="true" />
  </target>

  <target name="install"
          description="Install aGov with standard configuration.">
    <!-- Install the site -->
    <exec dir="${app.dir}"
          command="${drush.cmd} site-install ${app.profile.name} -y --site-name=${app.name} --account-pass='${app.password}' --db-url=${db.querystring} ${app.profile.options}"
          logoutput="true"
          passthru="true" />
  </target>

  <target name="styleguide:link" description="Link the style guide to make it publicly available.">
    <symlink link="${app.dir}/${app.profile.dir}/styleguide" target="${project.basedir}/styleguide" />
  </target>

  <target name="login" description="Generate a one-time login link">
    <exec dir="${app.dir}"
          command="${drush.cmd} uli -l ${app.uri}"
          logoutput="true"
          passthru="true" />
  </target>

  <target name="gulp:build" description="Generate all compiled Sass and style guide resources.">
    <exec dir="${app.dir}"
          command="${gulp.cmd} build"
          logoutput="true"
          passthru="true"
          checkreturn="true" />
  </target>

  <!--                    -->
  <!-- Development tagets -->
  <!-- ================   -->

  <target name="dev:modules"
          description="Install the development modules.">
    <exec dir="${app.dir}"
          command="${drush.cmd} en ${app.dev.modules} -y"
          logoutput="true"
          passthru="true" />
  </target>

  <target name="config:export" description="Export all of the configuration for the defined modules.">
    <exec dir="${app.dir}"
          command="${drush.cmd} config-devel-export-module ${app.dev.config_modules}"
          logoutput="true"
          passthru="true" />
  </target>

</project>
